---
import discoBall from '@assets/disco-ball-no-sparkles.svg';

const themes = ['green', 'purple', 'blue', 'brown', 'red', 'turquoise', 'pink'];
---

<div id="theme-picker" class="absolute top-2 w-full z-20">
  <div class="flex flex-wrap gap-2 justify-center items-center">
    {
      themes.map(theme => (
        <button
          tabindex="0"
          style={`background-color: rgb(var(--${theme}));`}
          class={`rounded-full w-5 h-5 cursor-pointer ring-1 ring-transparent ring-offset-1 hover:scale-105 active:scale-95 transition-transform`}
          data-theme={theme}
          aria-label={`Switch to ${theme} theme`}
        />
      ))
    }
    <button
      class="disco-button w-9 h-auto relative -top-[5px] right-[6px]"
      aria-label="Play disco"
    >
      <img
        src={discoBall.src}
        alt="disco ball"
        width={discoBall.width}
        height={discoBall.height}
      />
    </button>
  </div>
</div>

<!-- TODO: clean all this up -->
<script>
  function activateTheme(
    theme: string,
    trigger: 'click' | 'page-load',
    doc: Document = document
  ) {
    doc.documentElement.setAttribute('data-theme', theme);

    const heroTags = doc.querySelectorAll('.open-tag, .close-tag');
    heroTags?.forEach(tag => {
      tag.classList.remove('visible');
    });

    const heroH1 = doc.querySelector('.hero h1');

    if (trigger === 'click') {
      heroH1?.classList.add('underline-down');
    }

    const themeButtons = doc.querySelectorAll(
      '[data-theme]'
    ) as NodeListOf<HTMLButtonElement>;

    themeButtons.forEach(button => {
      button.classList.remove('ring-black');
      button.classList.add('ring-transparent');

      if (button.dataset.theme === theme) {
        button.classList.remove('ring-transparent');
        button.classList.add('ring-black');
      }
    });

    localStorage.setItem('theme', theme);

    setTimeout(() => {
      heroH1?.classList.remove('underline-down');
      heroTags?.forEach(tag => {
        tag.classList.add('visible');
      });
    }, 1000);
  }

  const theme = localStorage.getItem('theme');

  if (theme) {
    activateTheme(theme, 'page-load');
  } else {
    const activeTheme = document.documentElement.getAttribute('data-theme');

    if (activeTheme) {
      activateTheme(activeTheme, 'page-load');
    }
  }

  const themeButtons = document.querySelectorAll(
    'button[data-theme]'
  ) as NodeListOf<HTMLButtonElement>;

  // TODO: do this better...
  themeButtons.forEach(button => {
    button.addEventListener('click', () => {
      const theme = button.dataset.theme;
      if (theme) {
        activateTheme(theme, 'click');
      }
    });
  });

  function playDisco() {
    discoAudio.currentTime = 0;
    const discoScene = document.querySelector('.disco-scene');
    if (discoScene) {
      if (discoScene.classList.contains('playing')) {
        discoScene.classList.remove('playing');
        discoAudio.pause();
        clearTimeout(discoTimer);
      } else {
        discoScene.classList.add('playing');
        discoAudio.play();
        discoTimer = setTimeout(() => {
          discoScene.classList.remove('playing');
          discoAudio.pause();
        }, 8000);
      }
    }
  }

  let discoTimer: ReturnType<typeof setTimeout>;
  let discoAudio: HTMLAudioElement = new Audio('/disco.mp3');
  discoAudio.volume = 0.2;

  const discoButton = document.querySelector('.disco-button');

  if (discoButton) {
    discoButton.addEventListener('click', playDisco);
  }

  document.addEventListener('astro:before-swap', ev => {
    const theme = localStorage.getItem('theme');

    if (theme) {
      ev.newDocument.documentElement.setAttribute('data-theme', theme);
      activateTheme(theme, 'page-load', ev.newDocument);
    }

    const themeButtons = ev.newDocument.querySelectorAll(
      'button[data-theme]'
    ) as NodeListOf<HTMLButtonElement>;

    // TODO: do this better...
    themeButtons.forEach(button => {
      button.addEventListener('click', () => {
        const theme = button.dataset.theme;
        if (theme) {
          activateTheme(theme, 'click');
        }
      });
    });

    const discoButton = ev.newDocument.querySelector('.disco-button');

    if (discoButton) {
      discoButton.addEventListener('click', playDisco);
    }
  });
</script>

<style>
  body:has(.disco-scene.playing) {
    .disco-button img {
      filter: brightness(3.5);
    }
  }
</style>

<noscript>
  <style>
    #theme-picker {
      display: none;
    }
  </style>
</noscript>
