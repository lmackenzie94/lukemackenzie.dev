---
interface Props {
  variant?: 'purple' | 'green';
}

const { variant = 'purple' } = Astro.props;

const colour = variant === 'purple' ? 'rgb(var(--accent-dark))' : '#5EA821';
// const colourClasses = `bg-[${colour}] ring-[${colour}]`; <-- can't do this

const purpleClasses =
  'bg-[rgb(var(--accent-dark))] ring-[rgb(var(--accent-dark))]';
const greenClasses = 'bg-[#5EA821] ring-[#5EA821]';

const colourClasses = variant === 'purple' ? purpleClasses : greenClasses;
---

<div class="subheading text-center relative mb-12">
  <h2
    class={`${colourClasses} text-sm sm:text-base font-mono inline-block text-white px-6 py-2 rounded-full ring-1 ring-offset-2 min-w-32 sm:min-w-40`}
  >
    <slot />
  </h2>
</div>

<style define:vars={{ colour }}>
  .subheading::before {
    content: '';
    position: absolute;
    width: 90%;
    height: 1px;
    background: var(--colour);
    top: 50%;
    left: 5%;
    transform: translateY(-50%) scaleX(0);
    opacity: 0.3;
    z-index: -1;
    transition: transform 0.2s ease-out 0.3s;
  }

  .subheading.visible::before {
    transform: translateY(-50%) scaleX(1);
  }

  @media screen(sm) {
    .subheading::before {
      width: 60%;
      left: 20%;
    }
  }
</style>
