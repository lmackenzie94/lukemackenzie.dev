---
import type { InferGetStaticParamsType, InferGetStaticPropsType } from 'astro';
import Section from '../../components/Section.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

// returns an array of page routes, and all of the pages at those routes will use the same template defined in the file
export async function getStaticPaths() {
  // const allProjects: any = await Astro.glob('../projects/*.md');

  const allProjects = await getCollection('projects');

  const uniqueTags = [
    ...new Set(allProjects.map(project => project.data.tags).flat())
  ];

  return uniqueTags.map((tag: any) => {
    const filteredProjects = allProjects.filter(project =>
      project.data.tags.includes(tag)
    );
    return {
      params: { tag },
      props: { projects: filteredProjects }
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { projects } = Astro.props as Props;
---

<BaseLayout pageTitle={`Tag: ${tag}`}>
  <Section>
    <p>Projects tagged with {tag}</p>

    {
      projects.map(project => (
        <li>
          <a href={`/projects/${project.slug}/`}>{project.data.title}</a>
        </li>
      ))
    }
  </Section>
</BaseLayout>
