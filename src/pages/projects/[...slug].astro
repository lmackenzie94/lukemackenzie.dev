---
import { getCollection } from 'astro:content';
import Carousel from '@components/Carousel.astro';
import { Image } from 'astro:assets';
import ProjectLayout from '@layouts/ProjectLayout.astro';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map(entry => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();

const { title, tags, images, codeUrl, liveUrl } = entry.data;
---

<ProjectLayout title={title}>
  <article
    transition:name={`project-${title}-card`}
    class="bg-white border border-gray-200 rounded-2xl shadow-lg shadow-neutral-200/50 overflow-hidden"
  >
    {
      images.length > 1 ? (
        <Carousel images={images} />
      ) : (
        <Image
          src={images[0].src}
          alt={images[0].alt}
          class={`w-full aspect-video border-b border-gray-200 mx-auto object-top ${images[0].objectFit === 'contain' ? 'object-contain' : 'object-cover'}`}
          widths={[800, 1200, 1600]}
        />
      )
    }
    <div class="p-6 md:p-8">
      <div class="flex flex-col mb-0">
        <div class="flex gap-4 text-lg mb-1">
          {
            liveUrl && (
              <a
                href={liveUrl}
                class="text-purple opacity-50 hover:opacity-100 transition-opacity"
                target="_blank"
                rel="noopener noreferrer"
              >
                <p class="sr-only">Go to site</p>
                <i class="fa-solid fa-eye" />
              </a>
            )
          }
          {
            codeUrl && (
              <a
                href={codeUrl}
                class="text-green opacity-60 hover:opacity-100 transition-opacity"
                target="_blank"
                rel="noopener noreferrer"
              >
                <p class="sr-only">Go to code</p>
                <i class="fa-solid fa-code" />
              </a>
            )
          }
        </div>
      </div>

      <div
        class="prose prose-sm sm:prose-base prose:text-gray-600 prose-h1:mt-0 prose-a:text-purple-800 prose-headings:font-heading prose-headings:text-black"
      >
        <h1 transition:name={`project-${title}-title`} class="text-pretty">
          {title}
        </h1>
        <Content />
      </div>

      <ul class="mt-8">
        {
          tags.map((tag: string, index: number) => (
            <li
              class={`text-xs tracking-tight font-mono rounded-full px-3 py-1 mr-1 mt-1 inline-block ${index % 2 === 0 ? 'bg-purple-light text-purple' : 'bg-green-light text-green'}`}
            >
              {tag}
            </li>
          ))
        }
      </ul>
    </div>
  </article>
</ProjectLayout>
