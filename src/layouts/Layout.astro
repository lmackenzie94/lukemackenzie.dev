---
import Footer from '@components/Footer.astro';
// import Canvas from '@components/Canvas.astro';

import '@fontsource/caprasimo'; // Supports weights 100-700
import '@fontsource-variable/roboto-mono';
import '@fontsource/lilita-one';
import CommonHead from '@components/CommonHead.astro';

interface Props {
  title?: string;
}

const { title: pageTitle } = Astro.props;
---

<script>
  document.addEventListener('astro:page-load', () => {
    const observer = new IntersectionObserver(
      entries => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            entry.target.classList.add('visible');
          }
        });
      },
      {
        rootMargin: '0px 0px -40% 0px',
        threshold: 0.01
      }
    );

    const observedEls = document.querySelectorAll('[data-observe]');
    observedEls.forEach(el => {
      if (!el) return;
      observer.observe(el);
    });
  });
</script>

<html lang="en" data-theme="green">
  <CommonHead pageTitle={pageTitle} />

  <body class="flex flex-col min-h-screen">
    <!-- <Canvas /> -->
    <slot />
    <Footer />
  </body>
</html>

<style is:global>
  :root {
    --white: 255, 255, 255;
    --black: 40, 40, 40;

    --green: 89, 157, 117;
    --green-medium: 107, 171, 134;
    --green-light: 242, 248, 245;
    --green-faded: rgba(var(--green), 0.2);

    --purple: 157, 89, 129;
    --purple-medium: 194, 134, 169;
    --purple-light: 248, 242, 246;
    --purple-faded: rgba(var(--purple), 0.15);
  }

  html[data-theme='purple'] {
    --accent-light: var(--purple-light);
    --accent-medium: var(--purple-medium);
    --accent-dark: var(--purple);
    --accent-inverse: var(--green);
    --accent-inverse-light: var(--green-light);

    --text-gradient: linear-gradient(
      0deg,
      rgb(var(--accent-medium)) 0%,
      rgb(var(--accent-dark)) 100%
    );

    --bg-gradient: linear-gradient(
      rgba(var(--accent-light), 0.8) 0%,
      rgb(250, 250, 250) 60vh,
      rgb(250, 250, 250) 80%,
      rgba(var(--accent-light), 0.8) 110%
    );
  }

  html[data-theme='green'] {
    --accent-light: var(--green-light);
    --accent-medium: var(--green-medium);
    --accent-dark: var(--green);
    --accent-inverse: var(--purple);
    --accent-inverse-light: var(--purple-light);

    --text-gradient: linear-gradient(
      0deg,
      rgb(var(--accent-medium)) 0%,
      rgb(var(--accent-dark)) 100%
    );

    --bg-gradient: linear-gradient(
      rgba(var(--accent-light), 0.8) 0%,
      rgb(250, 250, 250) 60vh,
      rgb(250, 250, 250) 80%,
      rgba(var(--accent-inverse-light), 0.8) 110%
    );
  }

  ::-webkit-scrollbar {
    width: 12px;
    height: 8px;
  }

  /* Track */
  ::-webkit-scrollbar-track {
    background: rgb(var(--accent-light));
  }

  /* Handle */
  ::-webkit-scrollbar-thumb {
    background: rgb(var(--accent-dark));
  }
  html {
    font-family: system-ui, sans-serif;
    background: rgb(var(--white));
  }

  body {
    color: rgb(var(--black));
    background: var(--bg-gradient);
  }

  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }

  .text-gradient {
    background-image: var(--text-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
</style>
